name: AI PR Summary with Gemini 1.5 Flash

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  generate-summary:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Get PR Changes
        id: pr_changes
        run: |
          DIFF=$(gh pr diff ${{ github.event.pull_request.number }} || echo "Error fetching diff")
          if [ "$DIFF" = "Error fetching diff" ]; then
            echo "::error::Failed to fetch PR diff"
            exit 1
          fi
          echo "$DIFF" > pr_diff.txt
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate AI Summary with Gemini 1.5 Flash
        id: ai_summary
        run: |
          if [ ! -f pr_diff.txt ]; then
            echo "::error::PR diff file not found"
            exit 1
          fi
          
          DIFF_CONTENT=$(cat pr_diff.txt)
          RESPONSE=$(curl -s -X POST "https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=${{ secrets.GEMINI_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d @- << EOF
            {
              "contents": [{
                "role": "user",
                "parts": [{"text": "Summarize the following GitHub diff changes in a concise and structured markdown format, focusing on key changes and their impact:\n\n$DIFF_CONTENT"}]
              }]
            }
          EOF
          )
          
          if ! echo "$RESPONSE" | jq -e '.candidates[0].content.parts[0].text' > /dev/null; then
            echo "::error::Invalid API response"
            exit 1
          fi
          
          echo "$RESPONSE" | jq -r '.candidates[0].content.parts[0].text' > summary.txt
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

      - name: Post Summary as Comment
        if: success()
        run: |
          if [ ! -f summary.txt ]; then
            echo "::error::Summary file not found"
            exit 1
          fi
          
          SUMMARY_CONTENT=$(cat summary.txt)
          gh pr comment ${{ github.event.pull_request.number }} --body "### AI Summary (Gemini 1.5 Flash)

          $SUMMARY_CONTENT

          <sub>Generated at $(date -u)</sub>"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
